<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

	<!-- 从高到地低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
	<!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
	<!-- 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 -->


	<!-- 属性描述 scan：性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 
		debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
	<!-- 定义日志文件 输入位置 -->
	<property name="log_dir" value="/data/plcs-web/logs" />
	<!-- 日志最大的历史 30天 -->
	<property name="maxHistory" value="30" />

	<!-- ================================ 文件日志(同步)输出============================ -->
	<!-- 业务日志，开发环境使用 -->
	<appender name="PLCS_WEB_ERROR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log_dir}/plcs-web-error.log</file>
		<append>true</append>

		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天回滚 daily -->
			<fileNamePattern>${log_dir}/plcs-web-error-log-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<MaxFileSize>50MB</MaxFileSize>
			</TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>

		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>

		<encoder>
			<pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n %caller{1}</pattern>
			<charset>utf-8</charset>
		</encoder>
	</appender>

	<appender name="PLCS_WEB_ALL_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log_dir}/plcs-web-all.log</file>
		<append>true</append>

		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天回滚 daily -->
			<fileNamePattern>${log_dir}/plcs-web-all-log-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
			<maxHistory>${maxHistory}</maxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<MaxFileSize>50MB</MaxFileSize>
			</TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>

		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>

		<encoder>
			<pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n %caller{1}</pattern>
			<charset>utf-8</charset>
		</encoder>
	</appender>

	<!-- 控制台日志，开发阶段使用 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n %caller{1}</pattern>
		</encoder>
	</appender>

	<!-- 下面为具体日志配置,一个类的日志输入首先判断是否符合logger的过滤，没有则取root进行过滤 -->
	<root level="INFO">
		<appender-ref ref="PLCS_WEB_ALL_LOG" />
		<appender-ref ref="CONSOLE" />
	</root>

	<logger name="com.plcs" level="DEBUG" additivity="false">
		<appender-ref ref="CONSOLE" />
		<appender-ref ref="PLCS_WEB_ALL_LOG" />
		<appender-ref ref="PLCS_WEB_ERROR_LOG" />
	</logger>

	<logger name="org.springframework" level="INFO" additivity="false">
		<appender-ref ref="PLCS_WEB_ERROR_LOG" />
	</logger>
</configuration>